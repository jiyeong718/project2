{"ast":null,"code":"var _jsxFileName = \"/Users/jiyeong/WebstormProjects/test2/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Select from 'react-select';\nimport groupListData from './optionData'; // 정적 데이터 파일 import\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [selectedOptions, setSelectedOptions] = useState({});\n\n  // 정적 데이터로서의 품목 그룹 리스트\n  const groupList = groupListData;\n\n  // 각 그룹의 옵션을 선택할 때 처리 함수\n  const handleGroupChange = (selectedOption, groupIndex) => {\n    const updatedOptions = {\n      ...selectedOptions,\n      [groupIndex]: selectedOption\n    };\n    setSelectedOptions(updatedOptions);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [groupList.map((group, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: group.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        options: group.options,\n        onChange: selectedOption => handleGroupChange(selectedOption, index),\n        value: selectedOptions[index],\n        placeholder: group.placeholder\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 11\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uC120\\uD0DD\\uD55C \\uC635\\uC158:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), Object.keys(selectedOptions).map((key, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [groupList[key].title, \": \", selectedOptions[key].label]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"dLRHIO/SyIp9lHMf8Crrz2iKqk4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Select","groupListData","jsxDEV","_jsxDEV","App","_s","selectedOptions","setSelectedOptions","groupList","handleGroupChange","selectedOption","groupIndex","updatedOptions","children","map","group","index","title","fileName","_jsxFileName","lineNumber","columnNumber","options","onChange","value","placeholder","Object","keys","key","label","_c","$RefreshReg$"],"sources":["/Users/jiyeong/WebstormProjects/test2/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport Select from 'react-select';\nimport groupListData from './optionData'; // 정적 데이터 파일 import\n\nconst App = () => {\n  const [selectedOptions, setSelectedOptions] = useState({});\n\n  // 정적 데이터로서의 품목 그룹 리스트\n  const groupList = groupListData;\n\n  // 각 그룹의 옵션을 선택할 때 처리 함수\n  const handleGroupChange = (selectedOption, groupIndex) => {\n    const updatedOptions = { ...selectedOptions, [groupIndex]: selectedOption };\n    setSelectedOptions(updatedOptions);\n  };\n\n  return (\n    <div>\n      {groupList.map((group, index) => (\n        <div key={index}>\n          <h2>{group.title}</h2>\n          <Select\n            options={group.options}\n            onChange={(selectedOption) => handleGroupChange(selectedOption, index)}\n            value={selectedOptions[index]}\n            placeholder={group.placeholder}\n          />\n        </div>\n      ))}\n      <h2>선택한 옵션:</h2>\n      {Object.keys(selectedOptions).map((key, index) => (\n        <p key={index}>\n          {groupList[key].title}: {selectedOptions[key].label}\n        </p>\n      ))}\n    </div>\n  );\n};\n\nexport default App;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,MAAM,MAAM,cAAc;AACjC,OAAOC,aAAa,MAAM,cAAc,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE1C,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGR,QAAQ,CAAC,CAAC,CAAC,CAAC;;EAE1D;EACA,MAAMS,SAAS,GAAGP,aAAa;;EAE/B;EACA,MAAMQ,iBAAiB,GAAGA,CAACC,cAAc,EAAEC,UAAU,KAAK;IACxD,MAAMC,cAAc,GAAG;MAAE,GAAGN,eAAe;MAAE,CAACK,UAAU,GAAGD;IAAe,CAAC;IAC3EH,kBAAkB,CAACK,cAAc,CAAC;EACpC,CAAC;EAED,oBACET,OAAA;IAAAU,QAAA,GACGL,SAAS,CAACM,GAAG,CAAC,CAACC,KAAK,EAAEC,KAAK,kBAC1Bb,OAAA;MAAAU,QAAA,gBACEV,OAAA;QAAAU,QAAA,EAAKE,KAAK,CAACE;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACtBlB,OAAA,CAACH,MAAM;QACLsB,OAAO,EAAEP,KAAK,CAACO,OAAQ;QACvBC,QAAQ,EAAGb,cAAc,IAAKD,iBAAiB,CAACC,cAAc,EAAEM,KAAK,CAAE;QACvEQ,KAAK,EAAElB,eAAe,CAACU,KAAK,CAAE;QAC9BS,WAAW,EAAEV,KAAK,CAACU;MAAY;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChC,CAAC;IAAA,GAPML,KAAK;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAQV,CACN,CAAC,eACFlB,OAAA;MAAAU,QAAA,EAAI;IAAO;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACfK,MAAM,CAACC,IAAI,CAACrB,eAAe,CAAC,CAACQ,GAAG,CAAC,CAACc,GAAG,EAAEZ,KAAK,kBAC3Cb,OAAA;MAAAU,QAAA,GACGL,SAAS,CAACoB,GAAG,CAAC,CAACX,KAAK,EAAC,IAAE,EAACX,eAAe,CAACsB,GAAG,CAAC,CAACC,KAAK;IAAA,GAD7Cb,KAAK;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEV,CACJ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAAChB,EAAA,CAjCID,GAAG;AAAA0B,EAAA,GAAH1B,GAAG;AAmCT,eAAeA,GAAG;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}