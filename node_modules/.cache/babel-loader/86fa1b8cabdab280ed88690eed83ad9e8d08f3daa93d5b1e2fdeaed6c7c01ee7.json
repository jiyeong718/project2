{"ast":null,"code":"var _jsxFileName = \"/Users/jiyeong/WebstormProjects/jjalbang/src/pages/main/Main.js\",\n  _s = $RefreshSig$();\nimport Header from \"../../components/Header\";\nimport Message from \"../../components/Message\";\nimport StorageListCard from \"../../components/StorageListCard\";\nimport CreateStorage from \"../../components/CreateStorage\";\nimport UrlInput from \"../../components/UrlInput\";\nimport '../../styles/main.css';\nimport { useState, useEffect } from \"react\";\nimport { authService, dbService } from \"../../firebase\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Main = () => {\n  _s();\n  const [step, setStep] = useState(\"url입력\");\n  const [valueData, setValueData] = useState({\n    url: \"\",\n    selectedStorage: 0,\n    isCreate: false,\n    newStorageName: \"\",\n    selectedStorageName: \"\",\n    owner: \"\"\n  });\n\n  // const [selectData, setSelectData] = useState({\n  //\n  // })\n\n  const [showMessage, setShowMessage] = useState(false);\n  const [user, setUser] = useState(null);\n  const [userStorages, setUserStorages] = useState([]);\n  useEffect(() => {\n    const unsubscribe = authService.onAuthStateChanged(user => {\n      if (user) {\n        // 사용자가 로그인한 경우\n        setUser(user);\n        // 사용자 정보를 \"jjalbang-user\" 컬렉션에 저장\n        dbService.collection('jjalbang-user').doc(user.uid).set({\n          email: user.email\n          // 기타 필요한 사용자 정보 추가\n        }, {\n          merge: true\n        }); // 기존 사용자 정보와 병합\n      } else {\n        // 사용자가 로그아웃한 경우\n        setUser(null);\n      }\n    });\n    return () => unsubscribe();\n  }, []);\n  const handleShowMessage = async () => {\n    setShowMessage(true);\n    setTimeout(() => {\n      setShowMessage(false);\n      setStep(\"url입력\"); // 다시 초기 단계로 돌아갑니다.\n    }, 500); // 0.5초 후에 메시지를 감춥니다.\n\n    const uid = user.uid;\n    console.log(\"uid\", uid);\n    await setValueData({\n      ...valueData,\n      owner: uid // owner를 업데이트합니다.\n    });\n    await dbService.collection(\"jjalbang-url\").add({\n      url: valueData.url,\n      selectedStorage: valueData.selectedStorage,\n      crateAt: Date.now(),\n      owner: uid\n    });\n    console.log(\"valueData-selectStorage\", valueData);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main-container\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      text: \"짤방저장소\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"main-background-img\",\n        src: \"imgs/cute-doodle-flower-pattern.png\",\n        alt: \"\\uBC30\\uACBD\\uD654\\uBA74\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main-create\",\n        children: /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [step === \"url입력\" && /*#__PURE__*/_jsxDEV(UrlInput, {\n            onNext: data => {\n              setValueData({\n                ...valueData,\n                url: data\n              });\n              setStep(\"저장소선택\");\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 34\n          }, this), step == \"저장소선택\" && /*#__PURE__*/_jsxDEV(StorageListCard, {\n            onNext: data => {\n              setValueData({\n                ...valueData,\n                selectedStorage: data,\n                selectedStorageName: data\n              });\n              if (data === 0) {\n                setStep(\"저장소생성\");\n              } else {\n                setStep(\"저장완료\");\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 33\n          }, this), step == \"저장소생성\" && /*#__PURE__*/_jsxDEV(CreateStorage, {\n            onNext: data => {\n              setValueData({\n                ...valueData,\n                newStorageName: data\n              });\n              handleShowMessage();\n              setStep(\"저장완료\");\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 33\n          }, this), step == \"저장완료\" && /*#__PURE__*/_jsxDEV(Message, {\n            text: \"\\uC800\\uC7A5\\uB418\\uC5C8\\uC2B5\\uB2C8\\uB2E4.\",\n            onTimeout: handleShowMessage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 32\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n_s(Main, \"cez+bNGxK8g/OGG28wo98U+Sick=\");\n_c = Main;\nexport default Main;\nvar _c;\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["Header","Message","StorageListCard","CreateStorage","UrlInput","useState","useEffect","authService","dbService","jsxDEV","_jsxDEV","Fragment","_Fragment","Main","_s","step","setStep","valueData","setValueData","url","selectedStorage","isCreate","newStorageName","selectedStorageName","owner","showMessage","setShowMessage","user","setUser","userStorages","setUserStorages","unsubscribe","onAuthStateChanged","collection","doc","uid","set","email","merge","handleShowMessage","setTimeout","console","log","add","crateAt","Date","now","className","children","text","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","onNext","data","onTimeout","_c","$RefreshReg$"],"sources":["/Users/jiyeong/WebstormProjects/jjalbang/src/pages/main/Main.js"],"sourcesContent":["import Header from \"../../components/Header\";\nimport Message from \"../../components/Message\";\nimport StorageListCard from \"../../components/StorageListCard\";\nimport CreateStorage from \"../../components/CreateStorage\";\nimport UrlInput from \"../../components/UrlInput\";\nimport '../../styles/main.css';\nimport { useState, useEffect } from \"react\";\nimport { authService, dbService} from \"../../firebase\";\n\nconst Main = () => {\n  const [step, setStep] = useState(\"url입력\");\n  const [valueData, setValueData] = useState({\n    url: \"\",\n    selectedStorage: 0,\n    isCreate: false,\n    newStorageName: \"\",\n    selectedStorageName: \"\",\n    owner: \"\",\n  });\n\n  // const [selectData, setSelectData] = useState({\n  //\n  // })\n\n  const [showMessage, setShowMessage] = useState(false);\n  const [user, setUser] = useState(null);\n  const [userStorages, setUserStorages] = useState([]);\n\n  useEffect(() => {\n    const unsubscribe = authService.onAuthStateChanged((user) => {\n      if (user) {\n        // 사용자가 로그인한 경우\n        setUser(user);\n        // 사용자 정보를 \"jjalbang-user\" 컬렉션에 저장\n        dbService.collection('jjalbang-user').doc(user.uid).set({\n          email: user.email,\n          // 기타 필요한 사용자 정보 추가\n        }, { merge: true }); // 기존 사용자 정보와 병합\n      } else {\n        // 사용자가 로그아웃한 경우\n        setUser(null);\n      }\n    });\n\n    return () => unsubscribe();\n  }, []);\n\n\n  const handleShowMessage = async () => {\n    setShowMessage(true);\n    setTimeout(() => {\n      setShowMessage(false);\n      setStep(\"url입력\"); // 다시 초기 단계로 돌아갑니다.\n    }, 500); // 0.5초 후에 메시지를 감춥니다.\n\n    const uid = user.uid;\n    console.log(\"uid\", uid);\n\n    await setValueData({\n      ...valueData,\n      owner: uid, // owner를 업데이트합니다.\n    });\n\n    await dbService.collection(\"jjalbang-url\").add({\n      url: valueData.url,\n      selectedStorage: valueData.selectedStorage,\n      crateAt: Date.now(),\n      owner: uid,\n    });\n    console.log(\"valueData-selectStorage\", valueData);\n  };\n\n  return (\n    <div className=\"main-container\">\n      <Header text={\"짤방저장소\"}/>\n      <div className=\"main\">\n        <img className=\"main-background-img\" src=\"imgs/cute-doodle-flower-pattern.png\" alt=\"배경화면\" />\n        <div className=\"main-create\">\n          {/*<UrlInput/>*/}\n          {/*<StorageListCard/>*/}\n          {/*<CreateStorage/>*/}\n          {/*<Message text=\"저장되었습니다.\" />*/}\n          <>\n            {step === \"url입력\" && <UrlInput onNext={(data) => {\n              setValueData({ ...valueData, url: data });\n              setStep(\"저장소선택\");\n            }}/>}\n            {step == \"저장소선택\" && <StorageListCard onNext={(data) => {\n              setValueData({ ...valueData, selectedStorage: data, selectedStorageName: data });\n              if (data === 0) {\n                setStep(\"저장소생성\");\n              } else {\n                setStep(\"저장완료\");\n              }\n            }}/> }\n            {step == \"저장소생성\" && <CreateStorage onNext={(data) => {\n              setValueData({ ...valueData, newStorageName: data });\n              handleShowMessage();\n              setStep(\"저장완료\");\n            }}/> }\n            {step == \"저장완료\" && <Message text=\"저장되었습니다.\" onTimeout={handleShowMessage}/> }\n          </>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Main;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}