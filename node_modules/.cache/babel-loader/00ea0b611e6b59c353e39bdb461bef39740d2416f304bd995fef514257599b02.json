{"ast":null,"code":"var _jsxFileName = \"/Users/jiyeong/WebstormProjects/test2/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Select from 'react-select';\nimport groupListData from './groupListData'; // 정적 데이터 파일 import\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [selectedOptions, setSelectedOptions] = useState(Array(groupListData.groupList.length).fill(null));\n  const [isGroupEnabled, setIsGroupEnabled] = useState(Array(groupListData.groupList.length).fill(false));\n\n  // 정적 데이터로서의 품목 그룹 리스트\n  const groupList = groupListData.groupList;\n\n  // 각 그룹의 옵션을 선택할 때 처리 함수\n  const handleGroupChange = (selectedOption, groupIndex) => {\n    const updatedOptions = [...selectedOptions];\n    updatedOptions[groupIndex] = selectedOption;\n    setSelectedOptions(updatedOptions);\n\n    // 다음 그룹을 enable\n    if (groupIndex < groupList.length - 1) {\n      const updatedIsGroupEnabled = [...isGroupEnabled];\n      updatedIsGroupEnabled[groupIndex + 1] = true;\n      setIsGroupEnabled(updatedIsGroupEnabled);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [groupList.map((group, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: group.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        options: group.options.map(option => ({\n          value: option,\n          label: option\n        })) // Select 컴포넌트가 요구하는 형식으로 맞추기 위해 options를 변환\n        ,\n        onChange: selectedOption => handleGroupChange(selectedOption, index),\n        value: selectedOptions[index],\n        placeholder: `Select ${group.title}`,\n        isDisabled: index === 0 ? false : !isGroupEnabled[index]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uC120\\uD0DD\\uD55C \\uC635\\uC158:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), selectedOptions.map((selectedOption, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [groupList[index].title, \": \", selectedOption ? selectedOption.label : '-']\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"sYuszJ3oYTgUMxttdQhia+zsv7c=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Select","groupListData","jsxDEV","_jsxDEV","App","_s","selectedOptions","setSelectedOptions","Array","groupList","length","fill","isGroupEnabled","setIsGroupEnabled","handleGroupChange","selectedOption","groupIndex","updatedOptions","updatedIsGroupEnabled","children","map","group","index","title","fileName","_jsxFileName","lineNumber","columnNumber","options","option","value","label","onChange","placeholder","isDisabled","_c","$RefreshReg$"],"sources":["/Users/jiyeong/WebstormProjects/test2/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport Select from 'react-select';\nimport groupListData from './groupListData'; // 정적 데이터 파일 import\n\nconst App = () => {\n  const [selectedOptions, setSelectedOptions] = useState(Array(groupListData.groupList.length).fill(null));\n  const [isGroupEnabled, setIsGroupEnabled] = useState(Array(groupListData.groupList.length).fill(false));\n\n  // 정적 데이터로서의 품목 그룹 리스트\n  const groupList = groupListData.groupList;\n\n  // 각 그룹의 옵션을 선택할 때 처리 함수\n  const handleGroupChange = (selectedOption, groupIndex) => {\n    const updatedOptions = [...selectedOptions];\n    updatedOptions[groupIndex] = selectedOption;\n    setSelectedOptions(updatedOptions);\n\n    // 다음 그룹을 enable\n    if (groupIndex < groupList.length - 1) {\n      const updatedIsGroupEnabled = [...isGroupEnabled];\n      updatedIsGroupEnabled[groupIndex + 1] = true;\n      setIsGroupEnabled(updatedIsGroupEnabled);\n    }\n  };\n\n  return (\n    <div>\n      {groupList.map((group, index) => (\n        <div key={index}>\n          <h2>{group.title}</h2>\n          <Select\n            options={group.options.map(option => ({ value: option, label: option }))} // Select 컴포넌트가 요구하는 형식으로 맞추기 위해 options를 변환\n            onChange={(selectedOption) => handleGroupChange(selectedOption, index)}\n            value={selectedOptions[index]}\n            placeholder={`Select ${group.title}`}\n            isDisabled={index === 0 ? false : !isGroupEnabled[index]}\n          />\n        </div>\n      ))}\n      <h2>선택한 옵션:</h2>\n      {selectedOptions.map((selectedOption, index) => (\n        <p key={index}>\n          {groupList[index].title}: {selectedOption ? selectedOption.label : '-'}\n        </p>\n      ))}\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}