{"ast":null,"code":"var _jsxFileName = \"/Users/jiyeong/WebstormProjects/jjalbang/src/components/PrevImage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Helmet } from 'react-helmet';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst PrevImage = ({\n  imageUrl,\n  index\n}) => {\n  _s();\n  const [ogImageUrl, setOgImageUrl] = useState('');\n  useEffect(() => {\n    // URL에서 HTML 가져오기\n    fetch(imageUrl).then(res => res.json()).then(res => {\n      console.log(res.data);\n      const ogImageMetaTag = res.data.match(/<meta property=\"og:image\" content=\"([^\"]+)\"/);\n      if (ogImageMetaTag) {\n        const Url = ogImageMetaTag[1];\n        setOgImageUrl(Url);\n      }\n    }).catch(error => {\n      console.error('Error fetching HTML:', error);\n    });\n\n    // axios.get(imageUrl)\n    //   .then(response => {\n    //\n    //     const ogImageMetaTag = response.data.match(/<meta property=\"og:image\" content=\"([^\"]+)\"/);\n    //     if (ogImageMetaTag) {\n    //       const Url = ogImageMetaTag[1];\n    //       setOgImageUrl(Url);\n    //     }\n    //   })\n    //   .catch(error => {\n    //     console.error('Error fetching HTML:', error);\n    //   });\n  }, [imageUrl]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [ogImageUrl && /*#__PURE__*/_jsxDEV(Helmet, {\n      children: /*#__PURE__*/_jsxDEV(\"meta\", {\n        property: \"og:image\",\n        content: ogImageUrl\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this), ogImageUrl && /*#__PURE__*/_jsxDEV(\"img\", {\n      src: ogImageUrl,\n      alt: \"OG Image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 22\n    }, this)]\n  }, void 0, true);\n};\n_s(PrevImage, \"HOtyQcnTiaqKMv5L17Em3cVgkho=\");\n_c = PrevImage;\nexport default PrevImage;\nvar _c;\n$RefreshReg$(_c, \"PrevImage\");","map":{"version":3,"names":["React","useState","useEffect","Helmet","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","PrevImage","imageUrl","index","_s","ogImageUrl","setOgImageUrl","fetch","then","res","json","console","log","data","ogImageMetaTag","match","Url","catch","error","children","property","content","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","_c","$RefreshReg$"],"sources":["/Users/jiyeong/WebstormProjects/jjalbang/src/components/PrevImage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Helmet } from 'react-helmet';\nimport axios from 'axios';\n\nconst PrevImage = ({ imageUrl, index }) => {\n  const [ogImageUrl, setOgImageUrl] = useState('');\n\n  useEffect(() => {\n    // URL에서 HTML 가져오기\n    fetch(imageUrl)\n      .then((res) => res.json())\n      .then((res) => {\n        console.log(res.data);\n\n        const ogImageMetaTag = res.data.match(/<meta property=\"og:image\" content=\"([^\"]+)\"/);\n        if (ogImageMetaTag) {\n          const Url = ogImageMetaTag[1];\n          setOgImageUrl(Url);\n        }\n      })\n      .catch(error => {\n        console.error('Error fetching HTML:', error);\n      });\n\n    // axios.get(imageUrl)\n    //   .then(response => {\n    //\n    //     const ogImageMetaTag = response.data.match(/<meta property=\"og:image\" content=\"([^\"]+)\"/);\n    //     if (ogImageMetaTag) {\n    //       const Url = ogImageMetaTag[1];\n    //       setOgImageUrl(Url);\n    //     }\n    //   })\n    //   .catch(error => {\n    //     console.error('Error fetching HTML:', error);\n    //   });\n  }, [imageUrl]);\n\n  return (\n    <>\n      {/*<Helmet>*/}\n      {/*  <meta property=\"og:url\" content={Url}/>*/}\n      {/*  <meta property=\"og:image\" content=\"\"/>*/}\n      {/*</Helmet>*/}\n      {/*<label>*/}\n      {/*  <img src={imageUrl} alt={`img-${index}`} />*/}\n      {/*</label>*/}\n\n      {ogImageUrl && (\n        <Helmet>\n          <meta property=\"og:image\" content={ogImageUrl} />\n        </Helmet>\n      )}\n\n      {ogImageUrl && <img src={ogImageUrl} alt=\"OG Image\" />}\n    </>\n  );\n};\n\nexport default PrevImage;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,MAAM,QAAQ,cAAc;AACrC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE1B,MAAMC,SAAS,GAAGA,CAAC;EAAEC,QAAQ;EAAEC;AAAM,CAAC,KAAK;EAAAC,EAAA;EACzC,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAEhDC,SAAS,CAAC,MAAM;IACd;IACAa,KAAK,CAACL,QAAQ,CAAC,CACZM,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACzBF,IAAI,CAAEC,GAAG,IAAK;MACbE,OAAO,CAACC,GAAG,CAACH,GAAG,CAACI,IAAI,CAAC;MAErB,MAAMC,cAAc,GAAGL,GAAG,CAACI,IAAI,CAACE,KAAK,CAAC,6CAA6C,CAAC;MACpF,IAAID,cAAc,EAAE;QAClB,MAAME,GAAG,GAAGF,cAAc,CAAC,CAAC,CAAC;QAC7BR,aAAa,CAACU,GAAG,CAAC;MACpB;IACF,CAAC,CAAC,CACDC,KAAK,CAACC,KAAK,IAAI;MACdP,OAAO,CAACO,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC9C,CAAC,CAAC;;IAEJ;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EACF,CAAC,EAAE,CAAChB,QAAQ,CAAC,CAAC;EAEd,oBACEJ,OAAA,CAAAE,SAAA;IAAAmB,QAAA,GASGd,UAAU,iBACTP,OAAA,CAACH,MAAM;MAAAwB,QAAA,eACLrB,OAAA;QAAMsB,QAAQ,EAAC,UAAU;QAACC,OAAO,EAAEhB;MAAW;QAAAiB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3C,CACT,EAEApB,UAAU,iBAAIP,OAAA;MAAK4B,GAAG,EAAErB,UAAW;MAACsB,GAAG,EAAC;IAAU;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA,eACtD,CAAC;AAEP,CAAC;AAACrB,EAAA,CArDIH,SAAS;AAAA2B,EAAA,GAAT3B,SAAS;AAuDf,eAAeA,SAAS;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}