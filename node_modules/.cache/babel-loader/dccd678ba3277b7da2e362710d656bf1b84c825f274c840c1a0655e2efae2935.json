{"ast":null,"code":"var _jsxFileName = \"/Users/jiyeong/WebstormProjects/jjalbang/src/pages/mypage/Login.js\",\n  _s = $RefreshSig$();\nimport Header from \"../../components/Header\";\nimport MenuBar from \"../../components/MenuBar\";\nimport '../../styles/login.css';\nimport { authService } from \"../../firebase\";\nimport { GoogleAuthProvider, signInWithPopup } from \"firebase/auth\";\nimport { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = ({\n  isLoggedIn\n}) => {\n  _s();\n  const [userData, setUserData] = useState(null);\n  const navigate = useNavigate();\n  function handleGoogleLogin() {\n    const provider = new GoogleAuthProvider(); // provider 구글 설정\n    signInWithPopup(authService, provider) // 팝업창 띄워서 로그인\n    .then(data => {\n      setUserData(data.user); // user data 설정\n      console.log(data); // console에 UserCredentialImpl 출력\n      isLoggedIn = true;\n      navigate('/main');\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      text: \"짤방저장소\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"login-background-img\",\n        src: \"imgs/cute-doodle-flower-pattern.png\",\n        alt: \"\\uBC30\\uACBD\\uD654\\uBA74\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login-components\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"login-title\",\n          children: \"\\uB85C\\uADF8\\uC778\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"login-btn\",\n          onClick: handleGoogleLogin,\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"login-logo\",\n            src: \"imgs/google-logo.png\",\n            alt: \"google-logo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"login-text\",\n            children: \"\\uAD6C\\uAE00\\uB85C \\uB85C\\uADF8\\uC778 \\uD558\\uAE30\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this), userData ? userData.displayName : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MenuBar, {\n      onStorage: navigate('/storage')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"tN7ymEdq4cUXSZATQqB6SyO+g3U=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["Header","MenuBar","authService","GoogleAuthProvider","signInWithPopup","useState","useNavigate","jsxDEV","_jsxDEV","Login","isLoggedIn","_s","userData","setUserData","navigate","handleGoogleLogin","provider","then","data","user","console","log","catch","err","className","children","text","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","onClick","displayName","onStorage","_c","$RefreshReg$"],"sources":["/Users/jiyeong/WebstormProjects/jjalbang/src/pages/mypage/Login.js"],"sourcesContent":["import Header from \"../../components/Header\";\nimport MenuBar from \"../../components/MenuBar\";\nimport '../../styles/login.css';\nimport { authService } from \"../../firebase\";\nimport { GoogleAuthProvider, signInWithPopup } from \"firebase/auth\";\nimport { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst Login = ({isLoggedIn}) => {\n  const [userData, setUserData] = useState(null);\n  const navigate = useNavigate();\n\n  function handleGoogleLogin() {\n    const provider = new GoogleAuthProvider(); // provider 구글 설정\n    signInWithPopup(authService, provider) // 팝업창 띄워서 로그인\n      .then((data) => {\n        setUserData(data.user); // user data 설정\n        console.log(data); // console에 UserCredentialImpl 출력\n        isLoggedIn = true;\n        navigate('/main');\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n\n  return (\n    <div className=\"login-container\">\n      <Header text={\"짤방저장소\"}/>\n      <div className=\"login\">\n        <img className=\"login-background-img\" src=\"imgs/cute-doodle-flower-pattern.png\" alt=\"배경화면\" />\n        <div className=\"login-components\">\n          <p className=\"login-title\">로그인</p>\n          <button className=\"login-btn\" onClick={handleGoogleLogin}>\n            <img className=\"login-logo\" src=\"imgs/google-logo.png\" alt=\"google-logo\"/>\n            <div className=\"login-text\">구글로 로그인 하기</div>\n          </button>\n          {userData ? userData.displayName : null}\n        </div>\n      </div>\n      <MenuBar onStorage={navigate('/storage')}/>\n    </div>\n  );\n}\n\nexport default Login;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}