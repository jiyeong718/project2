{"ast":null,"code":"var _jsxFileName = \"/Users/jiyeong/WebstormProjects/test2/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport '/styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // 예제용 옵션 데이터\n  const options = [{\n    id: 1,\n    name: 'Option 1'\n  }, {\n    id: 2,\n    name: 'Option 2'\n  }, {\n    id: 3,\n    name: 'Option 3'\n  }, {\n    id: 4,\n    name: 'Option 4'\n  }, {\n    id: 5,\n    name: 'Option 5'\n  }];\n\n  // 선택된 옵션을 관리할 상태\n  const [selectedOptions, setSelectedOptions] = useState([]);\n\n  // 옵션 클릭 핸들러\n  const handleOptionClick = id => {\n    const index = selectedOptions.indexOf(id);\n    if (index === -1) {\n      // 선택되지 않은 경우 선택 추가\n      setSelectedOptions([...selectedOptions, id]);\n    } else {\n      // 선택된 경우 선택 제거\n      const updatedSelection = selectedOptions.filter(optionId => optionId !== id);\n      setSelectedOptions(updatedSelection);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"custom-select\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Custom Select Example\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"options-container\",\n      children: options.map(option => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `option ${selectedOptions.includes(option.id) ? 'isSelected' : ''}`,\n        onClick: () => handleOptionClick(option.id),\n        children: option.name\n      }, option.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Selected Options: \", selectedOptions.join(', ')]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"S24nRharoliKpDmkOrz7zqRL0rI=\");\n_c = App;\n;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","App","_s","options","id","name","selectedOptions","setSelectedOptions","handleOptionClick","index","indexOf","updatedSelection","filter","optionId","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","option","includes","onClick","join","_c","$RefreshReg$"],"sources":["/Users/jiyeong/WebstormProjects/test2/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport '/styles.css';\n\nfunction App() {\n// 예제용 옵션 데이터\n  const options = [\n    { id: 1, name: 'Option 1' },\n    { id: 2, name: 'Option 2' },\n    { id: 3, name: 'Option 3' },\n    { id: 4, name: 'Option 4' },\n    { id: 5, name: 'Option 5' },\n  ];\n\n  // 선택된 옵션을 관리할 상태\n  const [selectedOptions, setSelectedOptions] = useState([]);\n\n  // 옵션 클릭 핸들러\n  const handleOptionClick = (id) => {\n    const index = selectedOptions.indexOf(id);\n    if (index === -1) {\n      // 선택되지 않은 경우 선택 추가\n      setSelectedOptions([...selectedOptions, id]);\n    } else {\n      // 선택된 경우 선택 제거\n      const updatedSelection = selectedOptions.filter((optionId) => optionId !== id);\n      setSelectedOptions(updatedSelection);\n    }\n  };\n\n  return (\n    <div className=\"custom-select\">\n      <h2>Custom Select Example</h2>\n      <div className=\"options-container\">\n        {options.map((option) => (\n          <div\n            key={option.id}\n            className={`option ${selectedOptions.includes(option.id) ? 'isSelected' : ''}`}\n            onClick={() => handleOptionClick(option.id)}\n          >\n            {option.name}\n          </div>\n        ))}\n      </div>\n      <p>Selected Options: {selectedOptions.join(', ')}</p>\n    </div>\n  );\n};\n\nexport default App;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACf;EACE,MAAMC,OAAO,GAAG,CACd;IAAEC,EAAE,EAAE,CAAC;IAAEC,IAAI,EAAE;EAAW,CAAC,EAC3B;IAAED,EAAE,EAAE,CAAC;IAAEC,IAAI,EAAE;EAAW,CAAC,EAC3B;IAAED,EAAE,EAAE,CAAC;IAAEC,IAAI,EAAE;EAAW,CAAC,EAC3B;IAAED,EAAE,EAAE,CAAC;IAAEC,IAAI,EAAE;EAAW,CAAC,EAC3B;IAAED,EAAE,EAAE,CAAC;IAAEC,IAAI,EAAE;EAAW,CAAC,CAC5B;;EAED;EACA,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;;EAE1D;EACA,MAAMU,iBAAiB,GAAIJ,EAAE,IAAK;IAChC,MAAMK,KAAK,GAAGH,eAAe,CAACI,OAAO,CAACN,EAAE,CAAC;IACzC,IAAIK,KAAK,KAAK,CAAC,CAAC,EAAE;MAChB;MACAF,kBAAkB,CAAC,CAAC,GAAGD,eAAe,EAAEF,EAAE,CAAC,CAAC;IAC9C,CAAC,MAAM;MACL;MACA,MAAMO,gBAAgB,GAAGL,eAAe,CAACM,MAAM,CAAEC,QAAQ,IAAKA,QAAQ,KAAKT,EAAE,CAAC;MAC9EG,kBAAkB,CAACI,gBAAgB,CAAC;IACtC;EACF,CAAC;EAED,oBACEX,OAAA;IAAKc,SAAS,EAAC,eAAe;IAAAC,QAAA,gBAC5Bf,OAAA;MAAAe,QAAA,EAAI;IAAqB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC9BnB,OAAA;MAAKc,SAAS,EAAC,mBAAmB;MAAAC,QAAA,EAC/BZ,OAAO,CAACiB,GAAG,CAAEC,MAAM,iBAClBrB,OAAA;QAEEc,SAAS,EAAG,UAASR,eAAe,CAACgB,QAAQ,CAACD,MAAM,CAACjB,EAAE,CAAC,GAAG,YAAY,GAAG,EAAG,EAAE;QAC/EmB,OAAO,EAAEA,CAAA,KAAMf,iBAAiB,CAACa,MAAM,CAACjB,EAAE,CAAE;QAAAW,QAAA,EAE3CM,MAAM,CAAChB;MAAI,GAJPgB,MAAM,CAACjB,EAAE;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAKX,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACNnB,OAAA;MAAAe,QAAA,GAAG,oBAAkB,EAACT,eAAe,CAACkB,IAAI,CAAC,IAAI,CAAC;IAAA;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClD,CAAC;AAEV;AAACjB,EAAA,CA3CQD,GAAG;AAAAwB,EAAA,GAAHxB,GAAG;AA2CX;AAED,eAAeA,GAAG;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}