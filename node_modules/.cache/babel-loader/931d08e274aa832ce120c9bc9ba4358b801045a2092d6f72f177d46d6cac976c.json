{"ast":null,"code":"import React,{useState,useEffect}from'react';import{Helmet}from'react-helmet';import axios from'axios';import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const PrevImage=_ref=>{let{imageUrl,index}=_ref;const[ogImageUrl,setOgImageUrl]=useState('');useEffect(()=>{// URL에서 HTML 가져오기\nfetch(imageUrl).then(res=>res.text()).then(html=>{const parser=new DOMParser();const htmlDoc=parser.parseFromString(html,'text/html');const ogImageMetaTag=htmlDoc.querySelector('meta[property=\"og:image\"]');if(ogImageMetaTag){const imageUrl=ogImageMetaTag.getAttribute('content');setOgImageUrl(imageUrl);}}).catch(error=>{console.error('Error fetching HTML:',error);});// axios.get(imageUrl)\n//   .then(response => {\n//\n//     const ogImageMetaTag = response.data.match(/<meta property=\"og:image\" content=\"([^\"]+)\"/);\n//     if (ogImageMetaTag) {\n//       const Url = ogImageMetaTag[1];\n//       setOgImageUrl(Url);\n//     }\n//   })\n//   .catch(error => {\n//     console.error('Error fetching HTML:', error);\n//   });\n},[imageUrl]);return/*#__PURE__*/_jsxs(_Fragment,{children:[ogImageUrl&&/*#__PURE__*/_jsx(Helmet,{children:/*#__PURE__*/_jsx(\"meta\",{property:\"og:image\",content:ogImageUrl})}),ogImageUrl&&/*#__PURE__*/_jsx(\"img\",{src:ogImageUrl,alt:\"OG Image\"})]});};export default PrevImage;","map":{"version":3,"names":["React","useState","useEffect","Helmet","axios","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","PrevImage","_ref","imageUrl","index","ogImageUrl","setOgImageUrl","fetch","then","res","text","html","parser","DOMParser","htmlDoc","parseFromString","ogImageMetaTag","querySelector","getAttribute","catch","error","console","children","property","content","src","alt"],"sources":["/Users/jiyeong/WebstormProjects/jjalbang/src/components/PrevImage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Helmet } from 'react-helmet';\nimport axios from 'axios';\n\nconst PrevImage = ({ imageUrl, index }) => {\n  const [ogImageUrl, setOgImageUrl] = useState('');\n\n  useEffect(() => {\n    // URL에서 HTML 가져오기\n    fetch(imageUrl)\n      .then((res) => res.text())\n      .then((html) => {\n        const parser = new DOMParser();\n        const htmlDoc = parser.parseFromString(html, 'text/html');\n        const ogImageMetaTag = htmlDoc.querySelector('meta[property=\"og:image\"]');\n        if (ogImageMetaTag) {\n          const imageUrl = ogImageMetaTag.getAttribute('content');\n          setOgImageUrl(imageUrl);\n        }\n      })\n      .catch(error => {\n        console.error('Error fetching HTML:', error);\n      });\n\n    // axios.get(imageUrl)\n    //   .then(response => {\n    //\n    //     const ogImageMetaTag = response.data.match(/<meta property=\"og:image\" content=\"([^\"]+)\"/);\n    //     if (ogImageMetaTag) {\n    //       const Url = ogImageMetaTag[1];\n    //       setOgImageUrl(Url);\n    //     }\n    //   })\n    //   .catch(error => {\n    //     console.error('Error fetching HTML:', error);\n    //   });\n  }, [imageUrl]);\n\n  return (\n    <>\n      {/*<Helmet>*/}\n      {/*  <meta property=\"og:url\" content={Url}/>*/}\n      {/*  <meta property=\"og:image\" content=\"\"/>*/}\n      {/*</Helmet>*/}\n      {/*<label>*/}\n      {/*  <img src={imageUrl} alt={`img-${index}`} />*/}\n      {/*</label>*/}\n\n      {ogImageUrl && (\n        <Helmet>\n          <meta property=\"og:image\" content={ogImageUrl} />\n        </Helmet>\n      )}\n\n      {ogImageUrl && <img src={ogImageUrl} alt=\"OG Image\" />}\n    </>\n  );\n};\n\nexport default PrevImage;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,OAASC,MAAM,KAAQ,cAAc,CACrC,MAAO,CAAAC,KAAK,KAAM,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,QAAA,IAAAC,SAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAE1B,KAAM,CAAAC,SAAS,CAAGC,IAAA,EAAyB,IAAxB,CAAEC,QAAQ,CAAEC,KAAM,CAAC,CAAAF,IAAA,CACpC,KAAM,CAACG,UAAU,CAAEC,aAAa,CAAC,CAAGf,QAAQ,CAAC,EAAE,CAAC,CAEhDC,SAAS,CAAC,IAAM,CACd;AACAe,KAAK,CAACJ,QAAQ,CAAC,CACZK,IAAI,CAAEC,GAAG,EAAKA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACzBF,IAAI,CAAEG,IAAI,EAAK,CACd,KAAM,CAAAC,MAAM,CAAG,GAAI,CAAAC,SAAS,CAAC,CAAC,CAC9B,KAAM,CAAAC,OAAO,CAAGF,MAAM,CAACG,eAAe,CAACJ,IAAI,CAAE,WAAW,CAAC,CACzD,KAAM,CAAAK,cAAc,CAAGF,OAAO,CAACG,aAAa,CAAC,2BAA2B,CAAC,CACzE,GAAID,cAAc,CAAE,CAClB,KAAM,CAAAb,QAAQ,CAAGa,cAAc,CAACE,YAAY,CAAC,SAAS,CAAC,CACvDZ,aAAa,CAACH,QAAQ,CAAC,CACzB,CACF,CAAC,CAAC,CACDgB,KAAK,CAACC,KAAK,EAAI,CACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,CAAEA,KAAK,CAAC,CAC9C,CAAC,CAAC,CAEJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACF,CAAC,CAAE,CAACjB,QAAQ,CAAC,CAAC,CAEd,mBACEH,KAAA,CAAAF,SAAA,EAAAwB,QAAA,EASGjB,UAAU,eACTT,IAAA,CAACH,MAAM,EAAA6B,QAAA,cACL1B,IAAA,SAAM2B,QAAQ,CAAC,UAAU,CAACC,OAAO,CAAEnB,UAAW,CAAE,CAAC,CAC3C,CACT,CAEAA,UAAU,eAAIT,IAAA,QAAK6B,GAAG,CAAEpB,UAAW,CAACqB,GAAG,CAAC,UAAU,CAAE,CAAC,EACtD,CAAC,CAEP,CAAC,CAED,cAAe,CAAAzB,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}